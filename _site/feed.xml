<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rossoskull.me</title>
    <description>Hey everyone! I am Jay Mistry, a sophomore at IIIT Vadodara. I got into coding a bit early in my life, and am loving it since then! I love learning new stuff, and building things that help out me, and others. I believe in building a solution, rather than finding it someplace else. You can know more about me on one of my social handles. Thanks for visiting!
</description>
    <link>http://localhost:4000/blog/</link>
    <atom:link href="http://localhost:4000/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 10 Feb 2019 12:12:04 +0530</pubDate>
    <lastBuildDate>Sun, 10 Feb 2019 12:12:04 +0530</lastBuildDate>
    <generator>Jekyll v3.7.4</generator>
    
      <item>
        <title>Text transition using Vanilla JS and CSS tutorial</title>
        <description>&lt;p&gt;&lt;img src=&quot;/blog/assets/images/js-text-tut/cover.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ever since I used a text effect on my portfolio website, many peers have asked me of what module did I use to acheive the effect of text transition there? But the truth is, I didn’t. There was no need, as the implementation is easy itself. You can check out &lt;a href=&quot;https:rossoskull.github.io&quot; target=&quot;blank&quot;&gt;my portfolio&lt;/a&gt; website to know what effect I am talking about.&lt;/p&gt;

&lt;p&gt;Well, in this post, we are going to learn how to create a text transition effect using vanilla JS and CSS for yourself. To get an idea about what we will be creating take a look at this&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-image&quot; src=&quot;/blog/assets/images/js-text-tut/jstexttut.gif&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can visit the online deployment of this code &lt;a href=&quot;http://rossoskull.github.io/js-changingtext-tutorial/&quot; target=&quot;blank&quot;&gt;here&lt;/a&gt;. It is hosted on GitHub Pages. If you want to know how to host your static sites using GitHub Pages, you can visit my tutorial on &lt;a href=&quot;https://rossoskull.me/blog/learn/coding/2019/02/03/gh-pages-tutorial.html&quot; target=&quot;blank&quot;&gt;hosting your site with GitHub Pages&lt;/a&gt;. Also, the code for this tutorial is available &lt;a href=&quot;http://github.com/rossoskull/js-changingtext-tutorial/&quot; target=&quot;blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For this tutorial, we will use three files - &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;style.css&lt;/code&gt; &amp;amp; &lt;code class=&quot;highlighter-rouge&quot;&gt;script.js&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;contents-of-the-indexhtml-file&quot;&gt;Contents of the &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt; file&lt;/h3&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ie=edge&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;style.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;JS Text Transition&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Element where we will display the text --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'heading'&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;script.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;A minimal HTML file, with links to &lt;code class=&quot;highlighter-rouge&quot;&gt;style.css&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;script.js&lt;/code&gt;. Also, we created a paragraph element with id ‘heading’, which we will be targeting for text insertion and updation using JavaScript.&lt;/p&gt;

&lt;h3 id=&quot;contents-of-the-stylecss-file&quot;&gt;Contents of the &lt;code class=&quot;highlighter-rouge&quot;&gt;style.css&lt;/code&gt; file&lt;/h3&gt;
&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/* Style it as you want */&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;fixed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;translate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;-50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-50%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;'Montserrat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;/* Necessary styles */&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;transition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.2s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.invisible&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The style rules for the paragraph elements. Not all rules are necessary, only the opacity and transition rules are needed for this method to work. Also, the &lt;code class=&quot;highlighter-rouge&quot;&gt;invisible&lt;/code&gt; class changes the element’s opacity to 0. Initially the opacity is 1, which means that it is completely visible. When the opacity is set to 0, the element becomes completely transparent.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I have installed Montserrat font on my system, so there was no need to import it, but if you want to use Montserrat, and don’t have it installed, you can visit &lt;a href=&quot;https://fonts.google.com/specimen/Montserrat&quot; target=&quot;blank&quot;&gt;here&lt;/a&gt; to get it.&lt;/p&gt;

&lt;h3 id=&quot;contents-of-the-scriptjs-file&quot;&gt;Contents of the &lt;code class=&quot;highlighter-rouge&quot;&gt;script.js&lt;/code&gt; file&lt;/h3&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Values we want to display&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Apple'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Mango'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Orange'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Watermelon'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// index of the next element we want to display&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paragraph&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'heading'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Set the innerHTML to first value&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;paragraph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//  Fade out our element&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;paragraph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'invisible'&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;paragraph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// Circular incrementation of currentIndex variable&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;currentIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;currentIndex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;

            &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// Fade in our element&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;paragraph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;explaination&quot;&gt;&lt;strong&gt;Explaination&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;text&lt;/code&gt; variable contains an array of all the strings we wish to display in the target element. Also we set the &lt;code class=&quot;highlighter-rouge&quot;&gt;currentIndex&lt;/code&gt; variable to 1, as we will be inserting the first element ( indexed 0 ) of &lt;code class=&quot;highlighter-rouge&quot;&gt;text&lt;/code&gt; variable manually.&lt;/p&gt;

&lt;p&gt;Then we use the &lt;code class=&quot;highlighter-rouge&quot;&gt;onload&lt;/code&gt; property of &lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt; object, to trigger our transition function as soon as the document has finished loading. We target the element where we want to display our strings as &lt;code class=&quot;highlighter-rouge&quot;&gt;paragraph&lt;/code&gt;, and set it’s &lt;code class=&quot;highlighter-rouge&quot;&gt;innerHTML&lt;/code&gt; property to &lt;code class=&quot;highlighter-rouge&quot;&gt;text[0]&lt;/code&gt; i.e. the first element of the &lt;code class=&quot;highlighter-rouge&quot;&gt;text&lt;/code&gt; array.&lt;/p&gt;

&lt;p&gt;Then we create an interval which calls a function every 3000 milliseconds i.e. 3 seconds. This is the time for which the text will be shown to the user. At the start of the interval, we add an &lt;code class=&quot;highlighter-rouge&quot;&gt;invisible&lt;/code&gt; class to our element. As per the transition CSS rule of the element, it will take our element 200 milliseconds to completely fade out, so we set a timeout of 200 milliseconds to wait for our element to completely fade out, and then we change the &lt;code class=&quot;highlighter-rouge&quot;&gt;innerHTML&lt;/code&gt; to next value of &lt;code class=&quot;highlighter-rouge&quot;&gt;text&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We also set the &lt;code class=&quot;highlighter-rouge&quot;&gt;currentIndex&lt;/code&gt; to the next element in a circular manner. We want it to iterate circularly, so we add a modulus operator after the increment. Our &lt;code class=&quot;highlighter-rouge&quot;&gt;text&lt;/code&gt; array has a length of 4, so the &lt;code class=&quot;highlighter-rouge&quot;&gt;currentIndex&lt;/code&gt; can take values 0, 1, 2, 3. When the &lt;code class=&quot;highlighter-rouge&quot;&gt;currentIndex&lt;/code&gt; value is 3, after the next increment, it becomes 4, which is out of bounds for our array, so we use ‘%’ operator, which returns the remainder. So 4%4 becomes 0, and we start from there again.&lt;/p&gt;

&lt;p&gt;For this operation, we give it a timeout of 50 milliseconds ( more than needed ). Then we set the &lt;code class=&quot;highlighter-rouge&quot;&gt;className&lt;/code&gt; property to an empty string i.e. we remove the &lt;code class=&quot;highlighter-rouge&quot;&gt;invisible&lt;/code&gt; class. Now, &lt;code class=&quot;highlighter-rouge&quot;&gt;paragraph&lt;/code&gt; element’s opacity becomes 1, and due to transition time being 200 milliseconds, it slowly fades in in 200 milliseconds.&lt;/p&gt;

&lt;p&gt;As we used &lt;code class=&quot;highlighter-rouge&quot;&gt;setInterval&lt;/code&gt; function, the function will be called infinitely, but if you intend to stop the animation, you can using the following method.&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Create our interval, and store it in a variable&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;interval&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Remove the interval using clearInterval()&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;clearInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;interval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That’s it, now you’ve created your own text transition effect using Vanilla JS and CSS. If you face any difficulties, or have any improvements to share, you can comment down below. Thank you for your time!&lt;/p&gt;

&lt;p&gt;Adios folks!&lt;/p&gt;
</description>
        <pubDate>Sat, 09 Feb 2019 20:10:00 +0530</pubDate>
        <link>http://localhost:4000/blog/learn/coding/2019/02/09/js-text-transition-tutorial.html</link>
        <guid isPermaLink="true">http://localhost:4000/blog/learn/coding/2019/02/09/js-text-transition-tutorial.html</guid>
        
        
        <category>learn</category>
        
        <category>coding</category>
        
      </item>
    
      <item>
        <title>How to setup a GitHub Pages static site with custom domain?</title>
        <description>&lt;p&gt;&lt;img src=&quot;/blog/assets/images/gh-tut/cover.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;publishing-a-site-on-github-pages&quot;&gt;Publishing a site on GitHub Pages&lt;/h2&gt;
&lt;p&gt;You may want to host your static website for free, and GitHub Pages is a great platform to do so. In this tutorial, I am going to show you how you can setup your own GitHub Pages site with your custom domain name!&lt;/p&gt;

&lt;h5 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h5&gt;
&lt;p&gt;→ You need to have git installed on your computer. Click &lt;a href=&quot;https://git-scm.com/downloads&quot; target=&quot;blank&quot;&gt;here&lt;/a&gt; to download and setup git on your computer.&lt;/p&gt;

&lt;p&gt;After that’s done, create a static site where the landing page is named as &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt;. The reason you need to name your landing page, or the first page a user would see as &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt; is that the web server by-default looks for the &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt; file when no other file is specified.&lt;/p&gt;

&lt;p&gt;I have created a sample static site with a single HTML page called &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt;, one JavaScript file and one CSS file. The directory structure followed is as the following image -&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-image&quot; src=&quot;/blog/assets/images/gh-tut/dirstruct.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can find the code for this static site &lt;a href=&quot;https://GitHub.com/rossoskull/ghpages-tutorial&quot; target=&quot;blank&quot;&gt;here&lt;/a&gt;. We will take a look at the &lt;code class=&quot;highlighter-rouge&quot;&gt;CNAME&lt;/code&gt; file later on when we will configure the custom domain for this GitHub pages site.&lt;/p&gt;

&lt;p&gt;Now, let’s create a new repository on &lt;a href=&quot;https://GitHub.com&quot; target=&quot;blank&quot;&gt;GitHub&lt;/a&gt;. I have created one for the same &lt;a href=&quot;https://GitHub.com/rossoskull/ghpages-tutorial&quot; target=&quot;blank&quot;&gt;here&lt;/a&gt;. Open up a terminal window in your directory, and initialize a git repository by using the following command.&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You do not need to use this command if your directory is already a GIT repository.&lt;/p&gt;

&lt;p&gt;Now add a remote origin to your repository by using the following command-&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git remote add origin &amp;lt;your-repository-url&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You can get your repository URL by visiting your repository page, and in the drop down menu of “Clone or Download”, as shown in following image.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-image&quot; width=&quot;400px&quot; src=&quot;/blog/assets/images/gh-tut/clone.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Execute the following commands to stage your changes, and commit the changes-&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;Your commit message&amp;gt;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Push your commits to the master branch of your GitHub repository by executing the following commands-&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now open your GitHub repository page, open the settings tab, and scroll down to the section which says ‘GitHub Pages’.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-image&quot; src=&quot;/blog/assets/images/gh-tut/ghpagesopt.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There is a drop down menu, which lets you configure the GitHub pages settings for the respective repository. There are three options:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;master branch&lt;/li&gt;
  &lt;li&gt;master branch \docs folder&lt;/li&gt;
  &lt;li&gt;None&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Initially, the ‘None’ option is selected. It means that the current repository is not being used for GitHub Pages publishing. The ‘master branch’ option should be selected when you place your &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt; file in the root directory of your GIT repository. And the ‘master branch \docs folder’ option is used when you place your &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt; file in a ‘docs’ directory in the root directory of your GIT repository. For this tutorial, we are placing the &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt; file in the root directory of our repository. So we will select the ‘master branch’ option and save the changes. After we save the changes, our repository will be used for GitHub Pages publishing, and the site will be live at &lt;code class=&quot;highlighter-rouge&quot;&gt;https://&amp;lt;username&amp;gt;.GitHub.io/&amp;lt;repository_name&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It may take some time to update the DNS, but your site will be published. But even after some time, if the site is not published, you can try making some changes to your site, and pushing your commits to the GitHub Repository, which will trigger the republish, and your site will get published.&lt;/p&gt;

&lt;h2 id=&quot;adding-a-custom-domain&quot;&gt;Adding a custom domain&lt;/h2&gt;
&lt;p&gt;Now we will see how you can add a custom domain to your GitHub Pages site. If you don’t have a domain already, you can get one for free from &lt;a href=&quot;https://freenom.com&quot; target=&quot;blank&quot;&gt;Freenom&lt;/a&gt;. I will be using a free domain from Freenom in this tutorial. After you select your domain-&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-image&quot; src=&quot;/blog/assets/images/gh-tut/freenom.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;click on the checkout button. It will take you to the following page-&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;post-image&quot; src=&quot;/blog/assets/images/gh-tut/freenomdns.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click on the ‘Use DNS’ option and it will open up a form where you can edit the A records. You have to enter the IP addresses of GitHub Pages’ DNS servers. You can find the DNS IP’s of GitHub Pages &lt;a href=&quot;https://help.GitHub.com/articles/setting-up-an-apex-domain/#configuring-a-records-with-your-dns-provider&quot; target=&quot;blank&quot;&gt;here&lt;/a&gt;. Select any two IP addresses and paste them in the form of the checkout page. Click continue after it’s done.&lt;/p&gt;

&lt;p&gt;This is where the &lt;code class=&quot;highlighter-rouge&quot;&gt;CNAME&lt;/code&gt; file comes into action. To add a custom domain to your GitHub Pages site, create a file named &lt;code class=&quot;highlighter-rouge&quot;&gt;CNAME&lt;/code&gt; in the root directory of your GitHub repository and insert the domain name in the file. In my case, I had to use &lt;code class=&quot;highlighter-rouge&quot;&gt;ghpagestutorial.tk&lt;/code&gt;. If you would like to use any subdomain, you can add it in the &lt;code class=&quot;highlighter-rouge&quot;&gt;CNAME&lt;/code&gt; file in a new line. Now stage this changes and commit them, and push the changes to the master branch of your GitHub repository by executing the following commands-&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;commit-message&amp;gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The changes may take some time to get reflected, but you will be able to visit your static site at your domain now.&lt;/p&gt;

&lt;p&gt;If you face any errors or problems, and don’t know how to solve them, you can leave a comment below, and I will get back to you.&lt;/p&gt;

&lt;p&gt;That’s it for today people, thank you for your time!&lt;/p&gt;

&lt;p&gt;Adios Folks!&lt;/p&gt;
</description>
        <pubDate>Sun, 03 Feb 2019 17:10:00 +0530</pubDate>
        <link>http://localhost:4000/blog/learn/coding/2019/02/03/gh-pages-tutorial.html</link>
        <guid isPermaLink="true">http://localhost:4000/blog/learn/coding/2019/02/03/gh-pages-tutorial.html</guid>
        
        
        <category>learn</category>
        
        <category>coding</category>
        
      </item>
    
      <item>
        <title>&quot;What if I am not good at Coding? 😕&quot;</title>
        <description>&lt;h3 id=&quot;the-constant-struggle---lack-of-self-esteem&quot;&gt;The constant struggle - lack of self-esteem&lt;/h3&gt;
&lt;p&gt;Many times, I find people confusing skill with talent. Skill is something one acquires by perseverance, hard work and a lot of practise. It is then when someone becomes &lt;em&gt;Skilled&lt;/em&gt;. On the other hand, talent, is something one is born with. It is their natural aptitude. It is true that people with talent are better at doing things, as compared to other people, but it should also be known that their expertise due to talent can be surpassed with constant practise and hard work.&lt;/p&gt;

&lt;p&gt;I am often asked by people, who are just beginning their journeys in Computer Programming, that how am I able to code well then them? Same goes for the huge number of people who are far better then me. How are they so good? The answer is simple - Practise. Computer programming is just like speaking multiple languages - you just translate your ideas into code. If you can speak more than one language, then surely, you can code.&lt;/p&gt;

&lt;p&gt;Also, a reason for less self esteem may be an experience of a series of failures. The failures need not be large, even small ones are enough to break your confidence. But &lt;strong&gt;the one who stands through all of this, is the one who succeeds&lt;/strong&gt;. You can also check out my other blog post, which intends to help you to decide how to start with Computer Programming - &lt;a href=&quot;/learn/coding/2018/09/04/beginning-your-journey-the-right-way.html&quot; target=&quot;blank&quot;&gt;“Beginning your journey the right way”&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you checked it out, you may know, that there’s no hard and fast way of acheiving success overnight. No one can do that. Even God wasn’t able to create the World overnight. He took 7 days to do so. Compared to him, we are just Humans, so obviously we would need more time.&lt;/p&gt;

&lt;p&gt;The last point I would like to make, is that one needs to trust in oneself, if he intends to be successful. Without self-trust, people who are successful right now, would’ve left their positions the moment they faced difficulties. In order to learn something well, you need patience. Patience to sit and try something, and fail innumerable times, until you succeed. You need to become the best at what you do. This is a more general topic, it’s not just limited to Computer Programming.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;i&gt;“Genius is one percent inspiration, and ninety-nine percent perspiration.”&lt;/i&gt;&lt;/p&gt;

  &lt;p&gt;— &lt;cite&gt;Thomas Edison&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For any questions, you can always contact me through mail, or any of my social handles 😄. Also leave a comment for any suggestion.&lt;/p&gt;

&lt;p&gt;I’ll wrap this up with this. Thanks for your time!&lt;/p&gt;

&lt;p&gt;Adios Folks!&lt;/p&gt;

</description>
        <pubDate>Mon, 01 Oct 2018 13:56:00 +0530</pubDate>
        <link>http://localhost:4000/blog/learn/coding/2018/10/01/what-if-i-am-not-good-at-it.html</link>
        <guid isPermaLink="true">http://localhost:4000/blog/learn/coding/2018/10/01/what-if-i-am-not-good-at-it.html</guid>
        
        
        <category>learn</category>
        
        <category>coding</category>
        
      </item>
    
      <item>
        <title>What is RossoSkull?</title>
        <description>&lt;h3 id=&quot;origin-story-time-p&quot;&gt;Origin Story Time :P&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/images/img/rossoskull25ppi.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I coined the word “RossoSkull” when I was studying in 12&lt;sup&gt;th&lt;/sup&gt; class. I was frequently playing computer games then, so I needed a “cool” name which I could use in those games. And &lt;em&gt;“Rossoskull”&lt;/em&gt; came to my mind. &lt;em&gt;Rossoskull&lt;/em&gt; is comprised of two seperate terms - &lt;em&gt;Rosso&lt;/em&gt; and &lt;em&gt;Skull&lt;/em&gt;. As a whole, &lt;em&gt;RossoSkull&lt;/em&gt; means &lt;em&gt;RedSkull&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I used to play a lot of Assassin’s Creed titles back then ( During my 12&lt;sup&gt;th&lt;/sup&gt; class ). Assassin’s Creed is one of my most favourite gaming franchises. Anyone who played AC:2, AC:Brotherhood, and AC:Revelation, would know Ezio Auditore. Out of all the AC characters, he is my favourite. And he was Italian. I got acquainted with Italian language due to Ezio, and I started to like it. And &lt;em&gt;Rosso&lt;/em&gt; means &lt;em&gt;Red&lt;/em&gt; in Italian.&lt;/p&gt;

&lt;p&gt;So I took &lt;em&gt;Rosso&lt;/em&gt; from Italian language, and joined it to &lt;em&gt;Skull&lt;/em&gt;, and got &lt;em&gt;“RossoSkull”&lt;/em&gt; - meaning &lt;em&gt;RedSkull&lt;/em&gt;. RedSkull is a the name of a villain in the Marvel Universe, who first appeared in &lt;em&gt;Captain America : The First Avenger&lt;/em&gt;, and then in &lt;em&gt;Avengers : Infinity War&lt;/em&gt;. I am not particularly a fan of Redskull, but &lt;em&gt;RossoSkull&lt;/em&gt; clicked my mind, I started to like that name.&lt;/p&gt;

&lt;p&gt;So, I started using it. The word was unique, so it was available everywhere - GitHub, Facebook, Instagram, Twitter, etc. Also this domain &lt;code class=&quot;highlighter-rouge&quot;&gt;rossoskull.me&lt;/code&gt; was available. So, it was very convenient for me to use this word as my username, as no one else was using it, I didn’t need to add numbers or underscores around it to use it ( e.g. rossoskull123,  _rossoskull_, etc. ).&lt;/p&gt;

&lt;p&gt;And so came the name &lt;em&gt;“RossoSkull”&lt;/em&gt;. I’ll wrap it here.&lt;/p&gt;

&lt;p&gt;Adios Folks!
&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 13 Sep 2018 20:24:00 +0530</pubDate>
        <link>http://localhost:4000/blog/learn/coding/2018/09/13/why-rossoskull.html</link>
        <guid isPermaLink="true">http://localhost:4000/blog/learn/coding/2018/09/13/why-rossoskull.html</guid>
        
        
        <category>learn</category>
        
        <category>coding</category>
        
      </item>
    
      <item>
        <title>Beginning Your Journey &quot;The Right Way&quot;</title>
        <description>&lt;p&gt;Hey everyone! I hope everything’s going great! Today we’re going to discuss the “Right Way” to begin your journey in the domain of Computer Programming.&lt;/p&gt;

&lt;p&gt;First of all, let’s make it clear - There’s no hard written way of succeeding in anything. I just happens with sheer willpower, perseverance and hard work. Also there is NO shortcut. You have to take every step on the ‘ladder of success’ - there’s no skipping. Aye, you may learn from other people’s mistakes and experiences, but make sure that you have your own experiences too, and also make your own mistakes.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;i&gt;“Failure is not in falling, but in not rising up again”.&lt;/i&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The way, or workflow which I’ll be discussing here is the one I found out to be really effective. Undoubtedly, there are many other ways, some more effective, and some less. But everything is good if it helps you further yourself towards your goal.&lt;/p&gt;

&lt;h3 id=&quot;choosing-your-first-language&quot;&gt;Choosing your first language&lt;/h3&gt;
&lt;p&gt;Choosing your first language wisely is really important. Because you will do a lot of preliminary and basic stuff using your first language. A good tip for selecting your first programming language would be to select a compiled language like C, C++, Java, etc. Most of compiled languages, for e.g. C, are closer to the system. C doesn’t do a lot of stuff for us; for example, implementing dynamic arrays ( arrays with variable size ) in C is not so easy. But in interpreted languages, like Python, dynamic arrays are a part of the language ( called ‘lists’ ).&lt;/p&gt;

&lt;p&gt;The language which I would recommend for first-timers would be C. It has a flatter learning curve than Java and is similar to C++, but helps you in learning many of the concepts ( not including Object Oriented Programming ). You can also use C for Competitive Programming, as it is comparatively faster than other languages. Also, as it is a language that is ‘closer to the computer system and hardware’, we are also able to understand the working of the system.&lt;/p&gt;

&lt;p&gt;After you are well comfortable with C, you may move on to C++ or Java.&lt;/p&gt;

&lt;h3 id=&quot;good-logic&quot;&gt;Good Logic&lt;/h3&gt;
&lt;p&gt;The truth is, learning a programming language is really simple. It is simply a construct of words and symbols, which when placed correctly will create a good output. Here, “correct” is a subjective matter. With good Logic, you can create beautiful poetries out of your code. A simple example would be swapping 2 numbers stored in &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt;. The simplest method one can think of is to create a temporary variable &lt;code class=&quot;highlighter-rouge&quot;&gt;c&lt;/code&gt; and use it as following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;But what if we can do this, but without a 3&lt;sup&gt;rd&lt;/sup&gt; variable? There are some methods, like in the following trick, we use addition and subtraction to manipulate the values.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# a gets value 'a+b'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# b gets value 'a+b-b', i.e. 'a'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# a gets value 'a+b-a', i.e. 'b'&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# So, in the end, the values are swapped.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# To get a better understanding of this, use a pen and paper, and&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# try to work it out yourself.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Similarly, in other operations, you can write better code with better Logic. So first step would be to improve your logic, and train your brain to approach a problem from a technological point of view.&lt;/p&gt;

&lt;h3 id=&quot;how-to-improve-logic&quot;&gt;How to improve Logic?&lt;/h3&gt;
&lt;p&gt;Here comes in Competitive Programming ( or Sport Programming ). Competitive programming has a large community, and is still growing at a huge rate. There is an ocean of questions, problems and competitions available on the internet now. There are various sites for the same, like &lt;a href=&quot;https://www.hackerrank.com&quot; target=&quot;_blank&quot;&gt;Hackerrank&lt;/a&gt;, &lt;a href=&quot;https://www.codechef.com&quot; target=&quot;_blank&quot;&gt;Codechef&lt;/a&gt;, etc. You can solve some problems without using advanced concepts, but some problems do require them. You also need to practise Data Structures and Algorithms. Competitive Programming ‘forces’ you to think of the most optimal solution, and before long, your brain will be trained to think of an optimal solution wherever possible.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;i&gt;“With great Logic, comes great Code.”&lt;/i&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A good way to slowly improve your thinking, is to solve atleast 1-2 problems everyday. After 2-3 months, you will have a greater understanding of the problems, and the solving strategies.&lt;/p&gt;

&lt;h3 id=&quot;moving-further&quot;&gt;Moving further&lt;/h3&gt;
&lt;p&gt;By the time you decide to move further, you should have developed a good logic, and would be proficient with 2-3 languages. From this point on, it will be a cakewalk. Learning a new language will be really easy. Now, the important part is - “What you want to do in your life?”&lt;/p&gt;

&lt;p&gt;Computer Programming expands into a lot of huge fields further, like Web Development, App Development, Machine Learning, AI, Computer Vision, etc. It’s upto you to find out what you love to do.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;i&gt;“The only way to do great work, is to love what you do.”&lt;/i&gt;&lt;/p&gt;

  &lt;p&gt;— &lt;cite&gt;Steve Jobs&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’ll wrap up this post with this now, thank you for giving your time!&lt;/p&gt;

&lt;p&gt;Adios Folks!&lt;/p&gt;
</description>
        <pubDate>Tue, 04 Sep 2018 14:37:00 +0530</pubDate>
        <link>http://localhost:4000/blog/learn/coding/2018/09/04/beginning-your-journey-the-right-way.html</link>
        <guid isPermaLink="true">http://localhost:4000/blog/learn/coding/2018/09/04/beginning-your-journey-the-right-way.html</guid>
        
        
        <category>learn</category>
        
        <category>coding</category>
        
      </item>
    
      <item>
        <title>My Journey After Joining IIITV</title>
        <description>&lt;p&gt;The environment around me ( before joining IIITV ) was that I was the one who knew most of the stuff, and eventually it made me a bit lazy. It happens that when you feel that you know ‘enough’, you stop pushing yourself, and learning new things. It happened with me too.&lt;/p&gt;

&lt;p&gt;But after joining IIITV, I was introduced to a differant environment, a community of students, who knew a hell lot more than me, and also, they were inspiring and helping. There were some seniors who inspired me to move forward and push myself.&lt;/p&gt;

&lt;p&gt;Also I was introduced to &lt;a href=&quot;https://en.wikipedia.org/wiki/Competitive_programming&quot; target=&quot;_blank&quot;&gt;Sport Programming&lt;/a&gt;. Sport Programming helped me understand the importance of Logic. Also I came to know, whatever solution we may find to a problem, there may be some optimal solutions which may change the game. For example, if we create an application for sorting &lt;i&gt;n&lt;/i&gt; numbers, we have a number of algorithms to choose from. Let’s say Person &lt;i&gt;a&lt;/i&gt; creates a code to sort &lt;i&gt;n&lt;/i&gt; numbers using Bubble Sort algorithm, and Person &lt;i&gt;b&lt;/i&gt; uses Heap Sort algorithm, then the program by Person &lt;i&gt;b&lt;/i&gt; will be able to solve more lists of &lt;i&gt;n&lt;/i&gt; numbers, as Heap Sort is a better algorithm than Bubble Sort.&lt;/p&gt;

&lt;p&gt;I got an introduction to &lt;a href=&quot;https://en.wikipedia.org/wiki/Free_and_open-source_software&quot; target=&quot;_blank&quot;&gt;FOSS&lt;/a&gt; ( Free and Open Source Softwares ) too. The community in our institute is a bit inclined towards FOSS. FOSS has a really huge community base all over the world. Even before joining IIITV, I had used many FOSS softwares, like Inkscape ( alternative to Adobe Illustrator ), GIMP ( alternative to Adobe Photoshop ), LibreOffice ( alternative to Microsoft Office ),etc. The main reason behind using FOSS was the price factor. They are free to use, and also offer very similar features. Also they have very huge and active communities. And the best part is that you can contribute directly into the software that you use. The students at IIITV, who actively contribute to FOSS, also manage to get selected into &lt;a href=&quot;https://summerofcode.withgoogle.com/&quot; target=&quot;_blank&quot;&gt;Google Summer Of Code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Other newly thriving fields, like Machine Learning, Artificial Intelligence, Deep Learning, Computer Vision, etc. also caught my attention here. But currently I am more focused towards Web Development and contributing to FOSS. There is a great deal to learn from the communities that support FOSS.&lt;/p&gt;

&lt;p&gt;I started learning &lt;a href=&quot;https://en.wikipedia.org/wiki/Python_(programming_language)&quot; target=&quot;_blank&quot;&gt;Python&lt;/a&gt;, and soon it became one of my favourite languages. You can do almost anything with Python - web development, ML, AI, CV, scripting, etc. I also got my hands on Django - a Python framework that makes the lives of web developers a lot easy. It had a lot of inbuilt functionalities that help in shipping a product really fast. Also, from a security point of view, Django has a lot of tools and inbuilt functionalities to help you. It is a very powerful tool.&lt;/p&gt;

&lt;p&gt;During my first Summer break, I tried running &lt;a href=&quot;https://en.wikipedia.org/wiki/Javascript&quot; target=&quot;_blank&quot;&gt;JavaScript&lt;/a&gt; on the backend using &lt;a href=&quot;https://en.wikipedia.org/wiki/Node.js&quot; target=&quot;_blank&quot;&gt;Node.js&lt;/a&gt;. It was great to know that we can do backend and frontend development using a single language ( most parts ). Also JavaScript has a huge community too, so we have access to lot of libraries and frameworks, like ReactJS, AngularJS, VueJS, EmberJS, etc. I also learnt VueJS, as it is trending now-a-days. VueJS incorporates the best parts of ReactJS and AngularJS in a single framework. Also JavaScript has entered the buzzing tech worlds of AI, ML, CV, etc. It’s interesting where JavaScript will go in the future. As it is commonly said, &lt;i&gt;“Anything that can be written in JavaScript, will eventually be written in JavaScript”&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;Currently I am learning ReactJS, a Frontend framework in JavaScript. There are certain FOSS projects which I intend to contribute to, and the frontend part is developed using ReactJS, so learning it will help me in contributing.&lt;/p&gt;

&lt;p&gt;I think I’ll wrap up this post here.&lt;/p&gt;

&lt;p&gt;Adios Folks.&lt;/p&gt;
</description>
        <pubDate>Mon, 03 Sep 2018 00:43:00 +0530</pubDate>
        <link>http://localhost:4000/blog/learn/coding/2018/09/03/journey-after-iiitv.html</link>
        <guid isPermaLink="true">http://localhost:4000/blog/learn/coding/2018/09/03/journey-after-iiitv.html</guid>
        
        
        <category>learn</category>
        
        <category>coding</category>
        
      </item>
    
      <item>
        <title>My Journey Before Joining IIITV</title>
        <description>&lt;p&gt;Hey everyone! Today I’ll discuss my journey - how it all started.&lt;/p&gt;

&lt;p&gt;I began my coding journey a bit early in my life, and since then, it’s been wonderful. I try to keep learning new things everyday. I also believe in application. As it is known, only knowledge, and no application leads that knowledge to waste. So, Keep Learning!&lt;/p&gt;

&lt;p&gt;I started my journey in coding with &lt;a href=&quot;https://en.wikipedia.org/wiki/QBasic&quot; target=&quot;_blank&quot;&gt;QBASIC&lt;/a&gt;. As it’s name suggests, it’s for beginners. So I didn’t have a hard time with it. And with spending more time with it, I realised that I started to love Coding. The thought that I could possibly create &lt;b&gt;anything&lt;/b&gt; fascinated me. I felt “God-like”, we can say. And so it began - my journey.&lt;/p&gt;

&lt;p&gt;After that, I started building simple web pages using &lt;a href=&quot;https://en.wikipedia.org/wiki/HTML&quot; target=&quot;_blank&quot;&gt;HTML&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Cascading_Style_Sheets&quot; target=&quot;_blank&quot;&gt;CSS&lt;/a&gt;. I remember them being really ugly, but I learnt a lot from it. I started understanding the structure of the pages I was visiting frequently - facebook, google, wikipedia, etc. Though the code was tough to read, I managed to understand it a bit. And eventually, my understanding of web pages and sites started to become good ( I wasn’t familiar with any backend stuff back then, so I didn’t know what happened behind the scenes on those sites ).&lt;/p&gt;

&lt;p&gt;Then came &lt;a href=&quot;https://en.wikipedia.org/wiki/C_(programming_language)&quot; target=&quot;_blank&quot;&gt;C&lt;/a&gt; - the language that introduced me to Errors and Debugging. There were errors in QBASIC, but the code I used to write back then was so minimal and small, there wasn’t a huge scope for good errors. But with C, everything changed. There were segmentation faults, type errors, logical errors and what not. This helped me learn how the computer worked behind the scenes. As C is a language that is closer to the system, I would recommend first-timers to start with a language like C, but more on that later.&lt;/p&gt;

&lt;p&gt;Later on, I learnt &lt;a href=&quot;https://en.wikipedia.org/wiki/C++&quot; target=&quot;_blank&quot;&gt;C++&lt;/a&gt; from the book ‘C++ For Dummies, 7&lt;sup&gt;th&lt;/sup&gt; Edition’. Then I learnt the concepts of object oriented programming. I remember how happy I was, when my code of a banking system finally worked, wherein you would be able to create accounts, login, credit and debit money.&lt;/p&gt;

&lt;p&gt;Then I learnt &lt;a href=&quot;https://en.wikipedia.org/wiki/JavaScript&quot; target=&quot;_blank&quot;&gt;JavaScript&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_(programming_language)&quot; target=&quot;_blank&quot;&gt;Java&lt;/a&gt; in my 12&lt;sup&gt;th&lt;/sup&gt; class. It was taught as a part of our curriculum, but I learnt more than that. What the teachers taught was very simple, basically it was what I learnt with C, the only differance now was that of the language.&lt;/p&gt;

&lt;p&gt;Halfway through my 12&lt;sup&gt;th&lt;/sup&gt; class, entered &lt;a href=&quot;https://en.wikipedia.org/wiki/PHP&quot; target=&quot;_blank&quot;&gt;PHP&lt;/a&gt;. PHP intrigued me a lot as it helped me out of the dead-looking Console window, and into the browsers. I started off simply - fetching data from databases and displaying, and inserting data into the databases using forms. Then I created a user management system, which handled the login, registration and sessions of users. My final project using PHP was called “Veroyo” ( modified from “True me” in italian ), which was a social networking site, where it had a user management system and a posts management system.&lt;/p&gt;

&lt;p&gt;Then I got enrolled into IIITV, and my way of learning stuff changed. But more on that later.&lt;/p&gt;

&lt;p&gt;Adios folks.&lt;/p&gt;
</description>
        <pubDate>Sun, 02 Sep 2018 19:48:00 +0530</pubDate>
        <link>http://localhost:4000/blog/learn/coding/2018/09/02/journey-before-iiitv.html</link>
        <guid isPermaLink="true">http://localhost:4000/blog/learn/coding/2018/09/02/journey-before-iiitv.html</guid>
        
        
        <category>learn</category>
        
        <category>coding</category>
        
      </item>
    
      <item>
        <title>blog.init();</title>
        <description>&lt;h2 id=&quot;consoleloghello-world&quot;&gt;console.log(“Hello World”);&lt;/h2&gt;

&lt;h3 id=&quot;first-ever-blog-post&quot;&gt;First Ever Blog Post!&lt;/h3&gt;
&lt;p&gt;Hey everyone! I am Jay Mistry, a Sophomore at IIIT Vadodara. This is my first ever blog post! I am very excited regarding this blog &lt;code class=&quot;highlighter-rouge&quot;&gt;rossoskull.me&lt;/code&gt;, because now I have a tool, that’s under my control, using which I will share some ( or many ) of the cool stuff that happens in my life. Hopefully, these blog posts will be helpful to some of you in one way or the other.&lt;/p&gt;

&lt;p&gt;To know more about me, you can go &lt;a href=&quot;/about/&quot;&gt;here&lt;/a&gt;. Also to get more updates about this blog, or from my life, you can follow me on various social medias.&lt;/p&gt;

&lt;h3 id=&quot;about-this-blog&quot;&gt;About This Blog&lt;/h3&gt;
&lt;p&gt;This blog is created using &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;, which is a tool that helps you create simple, blog-aware static sites! Sounds cool, doesn’t it? Guess what, it actually is. This site is hosted using &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt;, and that too - for free! GitHub Pages supports Jekyll. I’ll be sharing my experiences and some stuff about coding using this blog.&lt;/p&gt;

</description>
        <pubDate>Fri, 31 Aug 2018 11:35:00 +0530</pubDate>
        <link>http://localhost:4000/blog/learn/coding/2018/08/31/blog-init.html</link>
        <guid isPermaLink="true">http://localhost:4000/blog/learn/coding/2018/08/31/blog-init.html</guid>
        
        
        <category>learn</category>
        
        <category>coding</category>
        
      </item>
    
  </channel>
</rss>
